100 REM Test unRLEWB to RAM
110 DEFINT A-Z
120 COLOR 15,4,5
121 SCREEN 1
122 WIDTH 32
130 REM read some tiles
131 PRINT "Test unRLEWB to RAM"
132 PRINT "Decompress tiles"
140 RESTORE 1040
150 DE=&HE000
160 GOSUB 9100
170 HL=&HE000
180 FOR BC=176 TO 215
190 A=PEEK(HL)
200 VPOKE BC,A
210 HL=HL+1
220 NEXT
221 VPOKE &H2002,&H74
222 VPOKE &H2003,&HE4
230 REM read Map (Name Table)
231 PRINT "Decompress map"
240 RESTORE 2030
250 DE=&HE000
260 GOSUB 9100
270 HL=&HE000
280 FOR BC=&H1800 TO &H197F
290 A=PEEK(HL)
300 VPOKE BC,A
310 HL=HL+1
320 NEXT
330 LOCATE 0,13
340 END
1000 REM Project: RLEWB BASIC test
1010 REM tileset pattern
1020 REM Tiles range: 22 to 26
1030 REM RLE WB compressed - Original size= 40 - Compress size= 27
1040 DATA 128,7,128,128,6,,255,128,2,,31,128,3,16,128,2
1050 DATA ,240,128,3,16,128,6,128,255,128,255
2000 REM Project: RLEWB BASIC test
2010 REM map size width:32 height:12
2020 REM RLE WB compressed - Original size= 384 - Compress size= 248
2030 DATA 128,8,23,32,32,128,6,23,128,5,32,128,6,23,32,30
2040 DATA 128,4,32,22,32,32,22,32,30,128,4,32,29,30,128,3
2050 DATA 32,29,30,128,5,32,30,32,26,23,23,32,32,22,32,32
2060 DATA 22,32,32,22,32,23,23,29,32,32,30,29,30,29,32,32
2070 DATA 30,128,2,23,32,32,29,32,22,128,2,32,23,22,32,32
2080 DATA 22,32,32,22,32,23,22,30,128,7,32,29,22,128,2,32
2090 DATA 29,32,32,22,32,22,32,32,22,32,32,26,23,23,22,32
2100 DATA 32,30,32,30,128,5,32,29,32,22,32,22,32,30,32,32
2110 DATA 22,32,22,32,32,22,128,3,32,29,128,3,32,30,32,30
2120 DATA 29,30,32,32,29,32,32,22,128,3,32,30,32,26,23,26
2130 DATA 23,23,26,128,2,23,29,128,2,23,32,32,29,128,3,32
2140 DATA 30,29,128,2,32,26,23,23,32,32,29,128,13,32,30,29
2150 DATA 32,101,110,99,111,100,101,114,32,118,49,46,48,30,29,32
2160 DATA 32,82,76,69,87,66,128,58,32,103,105,116,104,117,98,46
2170 DATA 99,111,109,47,109,118,97,99,55,47,90,56,48,95,82,76
2180 DATA 69,87,66,128,36,32,128,255
9000 '=================================
9010 ' unRLEWB to RAM for MSX BASIC
9020 ' Decompress RLEWB data to RAM
9030 ' Input: 
9040 '  RESTORE [line] <-- DATAs
9050 '              DE <-- RAM address
9060 '=================================
9100 READ A
9110 IF A=&H80 THEN 9150
9120 POKE DE,A
9130 DE=DE+1
9140 GOTO 9100
9150 READ A
9160 IF A=&HFF THEN RETURN
9170 IF A=0 THEN A=&H80:GOTO 9120
9180 READ B
9190 FOR DE=DE TO DE+A
9200 POKE DE,B
9210 NEXT
9220 GOTO 9100  