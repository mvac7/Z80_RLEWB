Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2022.02.06 - 19:18:38]

Test_RLEWB4.asm
Errors: 0

       1   00:0000                      ;test unWBRLE2VRAM
       2   00:0000                      ;Assemble with [Sjasm](http://www.xl2s.tk/)
       3   00:0000                      ;Format: MSX ROM 16K
       4   00:0000                      ;Version: 1.1
       5   00:0000                      
       6   00:0000                      
       7   00:0000                        OUTPUT TESTRLEW.ROM
       8   00:0000                        
       9   00:0000                        DEFPAGE 0,4000h,4000h		
      10   00:0000                      
      11   00:0000                      
      12   00:0000                      ;-------------------------------------------------------------------------------
      13   00:0000                      ;This label allows you to distinguish the assembler,
      14   00:0000                      ;when you need it when using conditional assembly
      15   00:0000                      ;Labels: ASMSX , SJASM or TNIASM
      16   00:0000                      ;Use it with the IFDEF statement
      17   00:0000                      DEFINE SJASM
      18   00:0000                      
      19   00:0000                      ;This label allows you to distinguish the runtime environment,
      20   00:0000                      ;when you need it when using conditional assembly
      21   00:0000                      ;Labels: MSXROM , MSXDOS or MSXBASIC
      22   00:0000                      ;Use it with the IFDEF statement
      23   00:0000                      DEFINE MSXROM
      24   00:0000                      ;-------------------------------------------------------------------------------
      25   00:0000                      
      26   00:0000                      
      27   00:0000                      
      28   00:0000                      ;--------------------------------------------------------------------- Constants
      29   00:0000  (00:0098)           VDPVRAM   EQU   $98 ;VRAM Data (Read/Write)
      30   00:0000  (00:0099)           VDPSTATUS EQU   $99 ;VDP Status Registers
      31   00:0000                      
      32   00:0000                      ;System variables RAM addresses
      33   00:0000                      ;info by MSX Resource Center 
      34   00:0000                      ;<https: //www.msx.org/wiki/System_variables_and_work_area>
      35   00:0000  (00:002D)           MSXVER EQU $002D
      36   00:0000  (00:F3E9)           FORCLR EQU $F3E9 ;Foreground colour
      37   00:0000  (00:F3EA)           BAKCLR EQU $F3EA ;Background colour
      38   00:0000  (00:F3EB)           BDRCLR EQU $F3EB ;Border colour
      39   00:0000  (00:F3DB)           CLIKSW EQU $F3DB ;0 disabled / 1 enabled
      40   00:0000  (00:F3E0)           RG1SAV EQU $F3E0 ;VDP REG 1
      41   00:0000  (00:FC4A)           HIMEM  EQU $FC4A ;Stack at the top of memory
      42   00:0000  (00:FFE7)           EXTVDP EQU $FFE7 ;
      43   00:0000                      
      44   00:0000                      
      45   00:0000                      ;BIOS
      46   00:0000                      ;info by MSX Assembly Page
      47   00:0000                      ;System constants addresses <http://map.grauw.nl/resources/msxsystemvars.php>
      48   00:0000  (00:0041)           DISSCR EQU $0041 ;inhibits the screen display
      49   00:0000  (00:0044)           ENASCR EQU $0044 ;displays the screen
      50   00:0000  (00:0047)           WRTVDP EQU $0047 ;write data in the VDP-register
      51   00:0000  (00:004A)           RDVRM  EQU $004A ;Reads the content of VRAM
      52   00:0000  (00:004D)           WRTVRM EQU $004D ;Writes data in VRAM
      53   00:0000  (00:0050)           SETRD  EQU $0050 ;Enable VDP to read
      54   00:0000  (00:0053)           SETWRT EQU $0053 ;Enable VDP to write
      55   00:0000  (00:0056)           FILVRM EQU $0056 ;fill VRAM with value
      56   00:0000  (00:0059)           LDIRMV EQU $0059 ;Block transfer to memory from VRAM
      57   00:0000  (00:005C)           LDIRVM EQU $005C ;Block transfer to VRAM from memory
      58   00:0000  (00:005F)           CHGMOD EQU $005F ;Switches to given screenmode
      59   00:0000  (00:0062)           CHGCLR EQU $0062 ;Changes the screencolors
      60   00:0000  (00:0069)           CLRSPR EQU $0069 ;Initialises all sprites
      61   00:0000  (00:006C)           INITXT EQU $006C ;Switches to SCREEN 0 (text screen with 40 * 24 characters)
      62   00:0000  (00:006F)           INIT32 EQU $006F ;Switches to SCREEN 1 (text screen with 32*24 characters)
      63   00:0000  (00:0072)           INIGRP EQU $0072 ;Switches to SCREEN 2 (high resolution screen with 256*192 pixels)
      64   00:0000  (00:0075)           INIMLT EQU $0075 ;Switches to SCREEN 3 (multi-color screen 64*48 pixels)
      65   00:0000  (00:0078)           SETTXT EQU $0078 ;Switches to VDP in SCREEN 0 mode
      66   00:0000  (00:007B)           SETT32 EQU $007B ;Switches VDP in SCREEN mode 1
      67   00:0000  (00:007E)           SETGRP EQU $007E ;Switches VDP to SCREEN 2 mode
      68   00:0000  (00:0081)           SETMLT EQU $0081 ;Switches VDP to SCREEN 3 mode
      69   00:0000  (00:0084)           CALPAT EQU $0084 ;Returns the address of the sprite pattern table
      70   00:0000  (00:0087)           CALATR EQU $0087 ;Returns the address of the sprite attribute table
      71   00:0000  (00:008A)           GSPSIZ EQU $008A ;Returns current sprite size
      72   00:0000  (00:008D)           GRPPRT EQU $008D ;Displays a character on the graphic screen
      73   00:0000                      
      74   00:0000  (00:0090)           GICINI EQU $0090 ;Initialises PSG and sets initial value for the PLAY statement
      75   00:0000  (00:0093)           WRTPSG EQU $0093 ;Writes data to PSG-register
      76   00:0000  (00:0096)           RDPSG  EQU $0096 ;Reads value from PSG-register
      77   00:0000                      ;
      78   00:0000                      
      79   00:0000                      ; more BIOS functions
      80   00:0000  (00:0141)           SNSMAT EQU $0141 ;
      81   00:0000  (00:00D5)           GTSTCK EQU $00D5
      82   00:0000  (00:00D8)           GTTRIG EQU $00D8
      83   00:0000  (00:0024)           ENASLT EQU $0024
      84   00:0000  (00:0156)           KILBUF EQU $0156
      85   00:0000                      
      86   00:0000                      
      87   00:0000  (00:1800)           BASE10 EQU $1800 ;base 10 name table
      88   00:0000  (00:2000)           BASE11 EQU $2000 ;base 11 color table
      89   00:0000  (00:0000)           BASE12 EQU $0000 ;base 12 character pattern table
      90   00:0000  (00:1B00)           BASE13 EQU $1B00 ;base 13 sprite attribute table
      91   00:0000  (00:3800)           BASE14 EQU $3800 ;base 14 sprite pattern table
      92   00:0000                      
      93   00:0000                      
      94   00:0000                      
      95   00:0000                      
      96   00:0000                      
      97   00:0000                      ;-------------------------------------------------------------------- ROM header
      98   00:0000  (00)                  PAGE 0
      99   00:4000                        CODE
     100   00:4000                        
     101   00:4000  41 42                 DB    "AB"
     102   00:4002  10 40                 DW    MAIN
     103   00:4004                        DW    0,0,0,0,0,0  
     103   00:4004  00 00 00 00 00 00 00 00 00 00 00 00 
     104   00:4010                      
     105   00:4010                      
     106   00:4010                      ;--------------------------------------------------------------------- main code
     107   00:4010                      MAIN:
     108   00:4010  F3                    DI    
     109   00:4011  ED 7B 4A FC           LD    SP,[HIMEM]             ;Stack at the top of memory
     110   00:4015  FB                    EI 
     111   00:4016                        
     112   00:4016                      
     113   00:4016                        ;color ,4,4  
     114   00:4016  3E 04                 ld   A,4
     115   00:4018  32 EA F3              ld   [BAKCLR],A
     116   00:401B  3E 04                 ld   A,4
     117   00:401D  32 EB F3              ld   [BDRCLR],A  
     118   00:4020  CD 62 00              call CHGCLR
     119   00:4023                      	
     120   00:4023                        ;screen 2
     121   00:4023  3E 02                 ld   A,2
     122   00:4025  CD 5F 00              call CHGMOD
     123   00:4028                      	
     124   00:4028                      
     125   00:4028                      ; decompress to RAM  
     126   00:4028  21 7B 40              ld   HL,PICTURE00_PAT
     127   00:402B  11 00 C0              ld   DE,$C000
     128   00:402E  CD 58 40              call unRLEWBtoRAM
     129   00:4031                        
     130   00:4031                        
     131   00:4031                      ;copy RAM to VRAM  
     132   00:4031  21 00 C0              ld   HL,$C000 ;RAM addr
     133   00:4034  11 00 00              ld   DE,BASE12
     134   00:4037  01 00 18              ld   BC,$1800    ;length
     135   00:403A  CD 5C 00              call LDIRVM
     136   00:403D                      
     137   00:403D  3E F4                 ld   A,$F4
     138   00:403F  21 00 20              ld   HL,BASE11
     139   00:4042  01 00 18              ld   BC,$1800    ;length
     140   00:4045  CD 56 00              call FILVRM
     141   00:4048                      
     142   00:4048                      LOOP:		
     143   00:4048  76                    halt
     144   00:4049                        
     145   00:4049                        
     146   00:4049  3E 07                 ld   A,7         
     147   00:404B  CD 41 01              call SNSMAT
     148   00:404E  D6 FB                 sub  A,11111011B    ;ESC
     149   00:4050  28 03                 JR   Z,ENDTEST
     150   00:4052                      	
     151   00:4052  C3 48 40              jp   LOOP
     152   00:4055                      
     153   00:4055                      ENDTEST:  
     154   00:4055                        
     155   00:4055  CD 00 00              call 0
     156   00:4058                      
     157   00:4058                      
     158   00:4058                      ;---------------------------------------------------------------------- includes
     159   00:4058                        INCLUDE	"unRLEWBtoRAM.asm"
       1.  00:4058                      ;===============================================================================
       2.  00:4058                      ; unRLEWBtoRAM v1.2 (6 February 2022)
       3.  00:4058                      ;
       4.  00:4058                      ; Function : Decompress RLEWB data to RAM
       5.  00:4058                      ;
       6.  00:4058                      ; Historic of versions:
       7.  00:4058                      ; - v1.2 (6 February 2022)
       8.  00:4058                      ; - v1.1 (26 jun 2014)
       9.  00:4058                      ;
      10.  00:4058                      ; IMPORTANT!
      11.  00:4058                      ; It requires Labels in the main code, to identify the assembler (ASMSX , SJASM
      12.  00:4058                      ; or TNIASM) and runtime (MSXROM , MSXDOS or MSXBASIC).
      13.  00:4058                      ;	 
      14.  00:4058                      ; Input	: HL - source RLEWB data memory address
      15.  00:4058                      ;         DE - target RAM address
      16.  00:4058                      ;
      17.  00:4058                      ; CD = Control Digit = $80
      18.  00:4058                      ;
      19.  00:4058                      ; CD + $0         --> for one $80 value
      20.  00:4058                      ; CD + $FF        --> end of data block
      21.  00:4058                      ; CD + nn + dd    --> repeat nn ($1-$FE)+1 dd value
      22.  00:4058                      ; dd (!= CD)      --> raw data		    
      23.  00:4058                      ;=============================================================================== 
      24.  00:4058                      
      25.  00:4058                      
      26.  00:4058                      
      27.  00:4058                      ;--------------------------------------------------------------------- constants
      28.  00:4058                      IFDEF TNIASM
      29.  00:4058                    ~ ;tniASM	
      30.  00:4058                    ~     RLEWB_CD:    EQU $80  ;Control Digit
      31.  00:4058                    ~     RLEWB_END:   EQU $FF  ;End
      32.  00:4058                    ~ 
      33.  00:4058                    ~ ELSE
      34.  00:4058                      ;asMSX and Sjasm
      35.  00:4058  (00:0080)           RLEWB_CD    EQU $80  ;Control Digit
      36.  00:4058  (00:00FF)           RLEWB_END   EQU $FF  ;End
      37.  00:4058                      
      38.  00:4058                      ENDIF
      39.  00:4058                      ;-------------------------------------------------------------------------------
      40.  00:4058                      
      41.  00:4058                      
      42.  00:4058                      unRLEWBtoRAM:
      43.  00:4058                        
      44.  00:4058  7E                    ld    A,[HL]          ;get byte
      45.  00:4059  FE 80                 cp    RLEWB_CD        ;if DC?               
      46.  00:405B  28 0B                 jr    Z,read_COMVAL
      47.  00:405D  ED A0                 ldi                   ;write raw value
      48.  00:405F  18 F7                 jr    unRLEWBtoRAM  
      49.  00:4061                      
      50.  00:4061                      write_CD2RAM:
      51.  00:4061                        ;output value equal to CD
      52.  00:4061  3E 80                 ld    A,RLEWB_CD     
      53.  00:4063  12                    ld    [DE],A         ;write CD value
      54.  00:4064  13                    inc   DE           
      55.  00:4065  23                    inc   HL           
      56.  00:4066  18 F0                 jr    unRLEWBtoRAM 
      57.  00:4068                      
      58.  00:4068                      read_COMVAL:  
      59.  00:4068  23                    inc   HL              ;get next byte 
      60.  00:4069  7E                    ld    A,[HL]
      61.  00:406A  B7                    or    A              
      62.  00:406B  28 F4                 jr    Z,write_CD2RAM  ;(CD $00) if A=0 then write DC value
      63.  00:406D  FE FF                 cp    RLEWB_END       ;if A=$FF
      64.  00:406F  C8                    ret   Z               ;(CD $FF) then exit
      65.  00:4070                        
      66.  00:4070                        ;(DC nn dd)
      67.  00:4070  3C                    inc   A               ;2 to 255 (1? what a waste! ;D ) 
      68.  00:4071  47                    ld    B,A             ;(nn) loop length 
      69.  00:4072  23                    inc   HL
      70.  00:4073  7E                    ld    A,[HL]          ;(dd) get value
      71.  00:4074                        
      72.  00:4074                      RLEWBram_loop:
      73.  00:4074  12                    ld    [DE],A          ;write value
      74.  00:4075  13                    inc   DE
      75.  00:4076  10 FC                 djnz  RLEWBram_loop
      76.  00:4078                        
      77.  00:4078  23                    inc   HL
      78.  00:4079  18 DD                 jr    unRLEWBtoRAM
      79.  00:407B                      
      80.  00:407B                        
     160   00:407B                      
     161   00:407B                      
     162   00:407B                      
     163   00:407B                      
     164   00:407B                      ; RLE WB compressed - Original size= 6144 - Compress size= 1368 (22,27%)
     165   00:407B                      PICTURE00_PAT:
     166   00:407B                      	DB $80,$FE,$00,$80,$0A,$00,$01,$03,$07,$0F,$1F,$3F,$0F,$7F,$80,$D5
     166   00:407B  80 FE 00 80 0A 00 01 03 07 0F 1F 3F 0F 7F 80 D5 
     167   00:408B                      	DB $FF,$F0,$FE,$80,$05,$FF,$00,$00,$80,$00,$C0,$E0,$F0,$F8,$FC,$80
     167   00:408B  FF F0 FE 80 05 FF 00 00 80 00 C0 E0 F0 F8 FC 80 
     168   00:409B                      	DB $0F,$00,$3F,$80,$02,$7F,$80,$03,$FF,$F8,$E0,$C0,$80,$00,$80,$00
     168   00:409B  0F 00 3F 80 02 7F 80 03 FF F8 E0 C0 80 00 80 00 
     169   00:40AB                      	DB $80,$D2,$00,$1F,$07,$03,$01,$01,$80,$02,$00,$FC,$80,$02,$FE,$80
     169   00:40AB  80 D2 00 1F 07 03 01 01 80 02 00 FC 80 02 FE 80 
     170   00:40BB                      	DB $03,$FF,$80,$0F,$00,$80,$07,$FF,$80,$DF,$00,$80,$07,$FF,$80,$0F
     170   00:40BB  03 FF 80 0F 00 80 07 FF 80 DF 00 80 07 FF 80 0F 
     171   00:40CB                      	DB $00,$80,$07,$FF,$80,$DF,$00,$80,$07,$FF,$80,$0F,$00,$80,$07,$FF
     171   00:40CB  00 80 07 FF 80 DF 00 80 07 FF 80 0F 00 80 07 FF 
     172   00:40DB                      	DB $80,$07,$00,$80,$07,$FF,$80,$07,$C0,$80,$07,$07,$80,$07,$FE,$80
     172   00:40DB  80 07 00 80 07 FF 80 07 C0 80 07 07 80 07 FE 80 
     173   00:40EB                      	DB $07,$01,$80,$0E,$FF,$80,$00,$80,$06,$FF,$00,$80,$06,$C0,$00,$80
     173   00:40EB  07 01 80 0E FF 80 00 80 06 FF 00 80 06 C0 00 80 
     174   00:40FB                      	DB $07,$FF,$80,$07,$C0,$80,$07,$00,$80,$07,$07,$80,$07,$FE,$80,$11
     174   00:40FB  07 FF 80 07 C0 80 07 00 80 07 07 80 07 FE 80 11 
     175   00:410B                      	DB $00,$01,$03,$07,$0F,$0F,$1F,$0F,$7F,$80,$03,$FF,$FE,$FC,$FC,$80
     175   00:410B  00 01 03 07 0F 0F 1F 0F 7F 80 03 FF FE FC FC 80 
     176   00:411B                      	DB $04,$FF,$1F,$0F,$00,$80,$00,$E0,$F0,$F8,$FC,$FC,$FE,$80,$37,$00
     176   00:411B  04 FF 1F 0F 00 80 00 E0 F0 F8 FC FC FE 80 37 00 
     177   00:412B                      	DB $80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80,$07,$00,$80,$07,$FF,$80
     177   00:412B  80 07 FF 80 0F 00 80 07 FF 80 07 00 80 07 FF 80 
     178   00:413B                      	DB $07,$C0,$80,$07,$07,$80,$07,$FE,$80,$07,$01,$80,$07,$FF,$80,$07
     178   00:413B  07 C0 80 07 07 80 07 FE 80 07 01 80 07 FF 80 07 
     179   00:414B                      	DB $80,$80,$0F,$00,$80,$07,$FF,$80,$07,$C0,$80,$07,$00,$80,$07,$07
     179   00:414B  80 80 0F 00 80 07 FF 80 07 C0 80 07 00 80 07 07 
     180   00:415B                      	DB $80,$07,$FE,$80,$0F,$00,$1F,$1F,$80,$05,$3F,$F8,$F8,$80,$05,$F0
     180   00:415B  80 07 FE 80 0F 00 1F 1F 80 05 3F F8 F8 80 05 F0 
     181   00:416B                      	DB $07,$07,$80,$05,$03,$FE,$FE,$80,$05,$FF,$80,$37,$00,$80,$07,$FF
     181   00:416B  07 07 80 05 03 FE FE 80 05 FF 80 37 00 80 07 FF 
     182   00:417B                      	DB $80,$0F,$00,$80,$07,$FF,$80,$07,$00,$80,$0E,$FF,$C0,$80,$06,$FF
     182   00:417B  80 0F 00 80 07 FF 80 07 00 80 0E FF C0 80 06 FF 
     183   00:418B                      	DB $07,$80,$07,$FE,$80,$07,$01,$80,$0E,$FF,$80,$00,$80,$06,$FC,$80
     183   00:418B  07 80 07 FE 80 07 01 80 0E FF 80 00 80 06 FC 80 
     184   00:419B                      	DB $08,$00,$80,$07,$FF,$80,$07,$C0,$80,$07,$00,$80,$07,$07,$80,$07
     184   00:419B  08 00 80 07 FF 80 07 C0 80 07 00 80 07 07 80 07 
     185   00:41AB                      	DB $FE,$80,$0F,$00,$80,$07,$3F,$80,$07,$F0,$80,$07,$03,$80,$07,$FF
     185   00:41AB  FE 80 0F 00 80 07 3F 80 07 F0 80 07 03 80 07 FF 
     186   00:41BB                      	DB $80,$37,$00,$80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80,$07,$00,$80
     186   00:41BB  80 37 00 80 07 FF 80 0F 00 80 07 FF 80 07 00 80 
     187   00:41CB                      	DB $07,$FF,$80,$07,$C0,$80,$07,$07,$80,$07,$FE,$80,$07,$01,$80,$07
     187   00:41CB  07 FF 80 07 C0 80 07 07 80 07 FE 80 07 01 80 07 
     188   00:41DB                      	DB $FF,$80,$07,$80,$80,$0F,$00,$80,$07,$FF,$80,$07,$C0,$80,$07,$00
     188   00:41DB  FF 80 07 80 80 0F 00 80 07 FF 80 07 C0 80 07 00 
     189   00:41EB                      	DB $80,$07,$07,$80,$07,$FE,$80,$0F,$00,$80,$05,$3F,$1F,$1F,$80,$05
     189   00:41EB  80 07 07 80 07 FE 80 0F 00 80 05 3F 1F 1F 80 05 
     190   00:41FB                      	DB $F0,$F8,$F8,$80,$05,$03,$07,$07,$80,$05,$FF,$FE,$FE,$80,$37,$00
     190   00:41FB  F0 F8 F8 80 05 03 07 07 80 05 FF FE FE 80 37 00 
     191   00:420B                      	DB $80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80,$07,$00,$80,$07,$FF,$80
     191   00:420B  80 07 FF 80 0F 00 80 07 FF 80 07 00 80 07 FF 80 
     192   00:421B                      	DB $07,$C0,$80,$07,$07,$80,$07,$FE,$80,$07,$01,$80,$07,$FF,$80,$00
     192   00:421B  07 C0 80 07 07 80 07 FE 80 07 01 80 07 FF 80 00 
     193   00:422B                      	DB $80,$06,$FF,$00,$80,$06,$FF,$00,$80,$06,$C0,$80,$07,$FF,$C0,$80
     193   00:422B  80 06 FF 00 80 06 FF 00 80 06 C0 80 07 FF C0 80 
     194   00:423B                      	DB $06,$FF,$00,$80,$06,$FF,$07,$80,$06,$87,$FE,$80,$06,$FF,$00,$80
     194   00:423B  06 FF 00 80 06 FF 07 80 06 87 FE 80 06 FF 00 80 
     195   00:424B                      	DB $06,$FF,$00,$80,$06,$FC,$1F,$0F,$0F,$07,$03,$01,$00,$00,$FC,$FE
     195   00:424B  06 FF 00 80 06 FC 1F 0F 0F 07 03 01 00 00 FC FE 
     196   00:425B                      	DB $80,$03,$FF,$7F,$0F,$0F,$1F,$80,$04,$FF,$FC,$FE,$FC,$FC,$F8,$F0
     196   00:425B  80 03 FF 7F 0F 0F 1F 80 04 FF FC FE FC FC F8 F0 
     197   00:426B                      	DB $E0,$80,$00,$80,$38,$00,$80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80
     197   00:426B  E0 80 00 80 38 00 80 07 FF 80 0F 00 80 07 FF 80 
     198   00:427B                      	DB $DF,$00,$80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80,$DF,$00,$80,$07
     198   00:427B  DF 00 80 07 FF 80 0F 00 80 07 FF 80 DF 00 80 07 
     199   00:428B                      	DB $FF,$80,$0F,$00,$80,$07,$FF,$80,$DF,$00,$80,$07,$FF,$80,$0F,$00
     199   00:428B  FF 80 0F 00 80 07 FF 80 DF 00 80 07 FF 80 0F 00 
     200   00:429B                      	DB $80,$07,$FF,$80,$07,$00,$FF,$FF,$80,$03,$7F,$3F,$3F,$C0,$C0,$80
     200   00:429B  80 07 FF 80 07 00 FF FF 80 03 7F 3F 3F C0 C0 80 
     201   00:42AB                      	DB $03,$E0,$F0,$F0,$0F,$0F,$80,$03,$1F,$3F,$3F,$FC,$FC,$80,$03,$FE
     201   00:42AB  03 E0 F0 F0 0F 0F 80 03 1F 3F 3F FC FC 80 03 FE 
     202   00:42BB                      	DB $FF,$FF,$00,$00,$80,$03,$01,$03,$03,$80,$07,$FF,$C0,$C0,$80,$02
     202   00:42BB  FF FF 00 00 80 03 01 03 03 80 07 FF C0 C0 80 02 
     203   00:42CB                      	DB $80,$81,$01,$03,$01,$0F,$3F,$7F,$80,$09,$FF,$C3,$81,$80,$00,$F0
     203   00:42CB  80 81 01 03 01 0F 3F 7F 80 09 FF C3 81 80 00 F0 
     204   00:42DB                      	DB $FC,$FE,$80,$03,$FF,$80,$04,$00,$80,$00,$80,$00,$C0,$80,$07,$1F
     204   00:42DB  FC FE 80 03 FF 80 04 00 80 00 80 00 C0 80 07 1F 
     205   00:42EB                      	DB $80,$06,$FF,$F8,$80,$06,$FF,$0F,$00,$E0,$F8,$FC,$FE,$FE,$FF,$FF
     205   00:42EB  80 06 FF F8 80 06 FF 0F 00 E0 F8 FC FE FE FF FF 
     206   00:42FB                      	DB $80,$07,$00,$80,$07,$FF,$80,$07,$C0,$80,$07,$00,$80,$07,$07,$80
     206   00:42FB  80 07 00 80 07 FF 80 07 C0 80 07 00 80 07 07 80 
     207   00:430B                      	DB $06,$FF,$FE,$80,$06,$FF,$0F,$80,$00,$F0,$FC,$FE,$80,$03,$FF,$80
     207   00:430B  06 FF FE 80 06 FF 0F 80 00 F0 FC FE 80 03 FF 80 
     208   00:431B                      	DB $04,$00,$80,$00,$80,$00,$C0,$80,$04,$07,$80,$02,$03,$80,$04,$FF
     208   00:431B  04 00 80 00 80 00 C0 80 04 07 80 02 03 80 04 FF 
     209   00:432B                      	DB $80,$02,$FE,$80,$07,$00,$80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80
     209   00:432B  80 02 FE 80 07 00 80 07 FF 80 0F 00 80 07 FF 80 
     210   00:433B                      	DB $07,$00,$3F,$3F,$80,$03,$1F,$0F,$0F,$F0,$F0,$80,$03,$F8,$FC,$FC
     210   00:433B  07 00 3F 3F 80 03 1F 0F 0F F0 F0 80 03 F8 FC FC 
     211   00:434B                      	DB $3F,$3F,$80,$03,$7F,$80,$09,$FF,$03,$03,$80,$03,$87,$CF,$CF,$FF
     211   00:434B  3F 3F 80 03 7F 80 09 FF 03 03 80 03 87 CF CF FF 
     212   00:435B                      	DB $FF,$80,$03,$FE,$FC,$FC,$03,$03,$80,$05,$07,$FF,$FF,$80,$05,$FE
     212   00:435B  FF 80 03 FE FC FC 03 03 80 05 07 FF FF 80 05 FE 
     213   00:436B                      	DB $80,$07,$00,$FF,$FF,$80,$05,$7F,$C0,$C0,$80,$05,$E0,$80,$07,$1F
     213   00:436B  80 07 00 FF FF 80 05 7F C0 C0 80 05 E0 80 07 1F 
     214   00:437B                      	DB $80,$07,$F8,$03,$80,$05,$01,$03,$80,$07,$FF,$00,$80,$05,$80,$00
     214   00:437B  80 07 F8 03 80 05 01 03 80 07 FF 00 80 05 80 00 
     215   00:438B                      	DB $80,$07,$FF,$80,$07,$C0,$80,$07,$00,$80,$07,$07,$80,$07,$FE,$03
     215   00:438B  80 07 FF 80 07 C0 80 07 00 80 07 07 80 07 FE 03 
     216   00:439B                      	DB $01,$01,$80,$04,$00,$80,$05,$FF,$7F,$7F,$C0,$C0,$80,$05,$E0,$80
     216   00:439B  01 01 80 04 00 80 05 FF 7F 7F C0 C0 80 05 E0 80 
     217   00:43AB                      	DB $05,$03,$01,$01,$80,$05,$FE,$FC,$FC,$80,$07,$00,$80,$07,$FF,$80
     217   00:43AB  05 03 01 01 80 05 FE FC FC 80 07 00 80 07 FF 80 
     218   00:43BB                      	DB $0F,$00,$80,$07,$FF,$80,$07,$00,$0F,$0F,$80,$03,$07,$03,$03,$FC
     218   00:43BB  0F 00 80 07 FF 80 07 00 0F 0F 80 03 07 03 03 FC 
     219   00:43CB                      	DB $FC,$80,$13,$FF,$3F,$3F,$CF,$CF,$80,$05,$FF,$FC,$FC,$80,$03,$F8
     219   00:43CB  FC 80 13 FF 3F 3F CF CF 80 05 FF FC FC 80 03 F8 
     220   00:43DB                      	DB $F0,$F0,$80,$07,$07,$80,$07,$FE,$80,$07,$00,$80,$07,$7F,$80,$07
     220   00:43DB  F0 F0 80 07 07 80 07 FE 80 07 00 80 07 7F 80 07 
     221   00:43EB                      	DB $E0,$80,$07,$1F,$F8,$80,$06,$FF,$0F,$80,$08,$FF,$FE,$FE,$FC,$F8
     221   00:43EB  E0 80 07 1F F8 80 06 FF 0F 80 08 FF FE FE FC F8 
     222   00:43FB                      	DB $F0,$C0,$80,$07,$00,$80,$07,$FF,$80,$07,$C0,$80,$07,$00,$80,$07
     222   00:43FB  F0 C0 80 07 00 80 07 FF 80 07 C0 80 07 00 80 07 
     223   00:440B                      	DB $07,$80,$07,$FE,$80,$07,$00,$80,$07,$7F,$80,$07,$E0,$80,$06,$01
     223   00:440B  07 80 07 FE 80 07 00 80 07 7F 80 07 E0 80 06 01 
     224   00:441B                      	DB $00,$80,$06,$FC,$F8,$80,$07,$00,$80,$07,$FF,$80,$0F,$00,$80,$07
     224   00:441B  00 80 06 FC F8 80 07 00 80 07 FF 80 0F 00 80 07 
     225   00:442B                      	DB $FF,$80,$07,$00,$03,$03,$80,$03,$01,$00,$00,$80,$09,$FF,$80,$03
     225   00:442B  FF 80 07 00 03 03 80 03 01 00 00 80 09 FF 80 03 
     226   00:443B                      	DB $FE,$FC,$FC,$3F,$3F,$80,$03,$1F,$0F,$0F,$80,$07,$FF,$F0,$F0,$80
     226   00:443B  FE FC FC 3F 3F 80 03 1F 0F 0F 80 07 FF F0 F0 80 
     227   00:444B                      	DB $03,$E0,$C0,$C0,$80,$05,$07,$03,$03,$80,$05,$FE,$FF,$FF,$80,$07
     227   00:444B  03 E0 C0 C0 80 05 07 03 03 80 05 FE FF FF 80 07 
     228   00:445B                      	DB $00,$80,$05,$7F,$FF,$FF,$80,$05,$E0,$C0,$C0,$80,$07,$1F,$80,$07
     228   00:445B  00 80 05 7F FF FF 80 05 E0 C0 C0 80 07 1F 80 07 
     229   00:446B                      	DB $F8,$7F,$7F,$3F,$3F,$1F,$1F,$0F,$0F,$E0,$E0,$F0,$F0,$F8,$F8,$FC
     229   00:446B  F8 7F 7F 3F 3F 1F 1F 0F 0F E0 E0 F0 F0 F8 F8 FC 
     230   00:447B                      	DB $FC,$80,$07,$00,$80,$07,$FF,$80,$07,$C0,$80,$07,$00,$80,$07,$07
     230   00:447B  FC 80 07 00 80 07 FF 80 07 C0 80 07 00 80 07 07 
     231   00:448B                      	DB $80,$07,$FE,$80,$04,$00,$01,$01,$03,$7F,$7F,$80,$05,$FF,$80,$05
     231   00:448B  80 07 FE 80 04 00 01 01 03 7F 7F 80 05 FF 80 05 
     232   00:449B                      	DB $E0,$C0,$C0,$80,$06,$00,$01,$80,$03,$F8,$80,$02,$00,$FC,$80,$07
     232   00:449B  E0 C0 C0 80 06 00 01 80 03 F8 80 02 00 FC 80 07 
     233   00:44AB                      	DB $00,$80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80,$0F,$00,$FF,$FF,$80
     233   00:44AB  00 80 07 FF 80 0F 00 80 07 FF 80 0F 00 FF FF 80 
     234   00:44BB                      	DB $03,$7F,$3F,$3F,$FC,$FC,$80,$03,$F8,$F0,$F0,$0F,$0F,$80,$03,$07
     234   00:44BB  03 7F 3F 3F FC FC 80 03 F8 F0 F0 0F 0F 80 03 07 
     235   00:44CB                      	DB $03,$03,$80,$07,$FF,$C0,$C0,$80,$03,$80,$00,$00,$03,$01,$01,$80
     235   00:44CB  03 03 80 07 FF C0 C0 80 03 80 00 00 03 01 01 80 
     236   00:44DB                      	DB $04,$00,$80,$03,$FF,$7F,$3F,$0F,$01,$81,$C3,$80,$09,$FF,$FE,$FC
     236   00:44DB  04 00 80 03 FF 7F 3F 0F 01 81 C3 80 09 FF FE FC 
     237   00:44EB                      	DB $F0,$80,$00,$C0,$80,$00,$80,$00,$80,$04,$00,$80,$07,$1F,$80,$07
     237   00:44EB  F0 80 00 C0 80 00 80 00 80 04 00 80 07 1F 80 07 
     238   00:44FB                      	DB $F8,$07,$07,$03,$03,$01,$01,$00,$00,$FE,$FE,$80,$05,$FF,$80,$03
     238   00:44FB  F8 07 07 03 03 01 01 00 00 FE FE 80 05 FF 80 03 
     239   00:450B                      	DB $00,$80,$00,$80,$00,$C0,$C0,$80,$07,$FF,$C0,$80,$06,$FF,$00,$80
     239   00:450B  00 80 00 80 00 C0 C0 80 07 FF C0 80 06 FF 00 80 
     240   00:451B                      	DB $06,$FF,$07,$80,$06,$87,$FE,$80,$06,$FF,$0F,$80,$0A,$FF,$FE,$FC
     240   00:451B  06 FF 07 80 06 87 FE 80 06 FF 0F 80 0A FF FE FC 
     241   00:452B                      	DB $F0,$80,$00,$C0,$80,$00,$80,$00,$80,$04,$00,$80,$06,$03,$01,$80
     241   00:452B  F0 80 00 C0 80 00 80 00 80 04 00 80 06 03 01 80 
     242   00:453B                      	DB $06,$FE,$FC,$80,$07,$00,$80,$07,$FF,$80,$0F,$00,$80,$07,$FF,$80
     242   00:453B  06 FE FC 80 07 00 80 07 FF 80 0F 00 80 07 FF 80 
     243   00:454B                      	DB $DF,$00,$80,$07,$FF,$80,$0F,$00,$80,$03,$FF,$80,$02,$7F,$3F,$80
     243   00:454B  DF 00 80 07 FF 80 0F 00 80 03 FF 80 02 7F 3F 80 
     244   00:455B                      	DB $02,$00,$80,$00,$80,$00,$C0,$E0,$F8,$80,$D2,$00,$01,$01,$03,$07
     244   00:455B  02 00 80 00 80 00 C0 E0 F8 80 D2 00 01 01 03 07 
     245   00:456B                      	DB $1F,$80,$03,$FF,$80,$02,$FE,$FC,$80,$0F,$00,$3F,$1F,$0F,$07,$03
     245   00:456B  1F 80 03 FF 80 02 FE FC 80 0F 00 3F 1F 0F 07 03 
     246   00:457B                      	DB $01,$00,$00,$80,$05,$FF,$7F,$0F,$80,$07,$FF,$FE,$80,$06,$FF,$80
     246   00:457B  01 00 00 80 05 FF 7F 0F 80 07 FF FE 80 06 FF 80 
     247   00:458B                      	DB $08,$00,$01,$03,$07,$0F,$1F,$3F,$7F,$7F,$80,$B4,$FF,$FE,$F0,$FC
     247   00:458B  08 00 01 03 07 0F 1F 3F 7F 7F 80 B4 FF FE F0 FC 
     248   00:459B                      	DB $F8,$F0,$E0,$C0,$80,$00,$80,$29,$00,$80,$07,$FF,$00,$01,$03,$07
     248   00:459B  F8 F0 E0 C0 80 00 80 29 00 80 07 FF 00 01 03 07 
     249   00:45AB                      	DB $0F,$1F,$3F,$80,$04,$FF,$FE,$FC,$F8,$F0,$F0,$C0,$80,$00,$80,$E4
     249   00:45AB  0F 1F 3F 80 04 FF FE FC F8 F0 F0 C0 80 00 80 E4 
     250   00:45BB                      	DB $00,$80,$06,$FF,$7F,$80,$03,$FF,$FE,$FC,$F8,$E0,$E0,$C0,$80,$00
     250   00:45BB  00 80 06 FF 7F 80 03 FF FE FC F8 E0 E0 C0 80 00 
     251   00:45CB                      	DB $80,$FE,$00,$80,$CD,$00,$80,$FF
     251   00:45CB  80 FE 00 80 CD 00 80 FF 

    LABELS
-------------------------------------------------
00:00000098 X VDPVRAM
00:00000099 X VDPSTATUS
00:0000002D X MSXVER
00:0000F3E9 X FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:0000F3DB X CLIKSW
00:0000F3E0 X RG1SAV
00:0000FC4A   HIMEM
00:0000FFE7 X EXTVDP
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000047 X WRTVDP
00:0000004A X RDVRM
00:0000004D X WRTVRM
00:00000050 X SETRD
00:00000053 X SETWRT
00:00000056   FILVRM
00:00000059 X LDIRMV
00:0000005C   LDIRVM
00:0000005F   CHGMOD
00:00000062   CHGCLR
00:00000069 X CLRSPR
00:0000006C X INITXT
00:0000006F X INIT32
00:00000072 X INIGRP
00:00000075 X INIMLT
00:00000078 X SETTXT
00:0000007B X SETT32
00:0000007E X SETGRP
00:00000081 X SETMLT
00:00000084 X CALPAT
00:00000087 X CALATR
00:0000008A X GSPSIZ
00:0000008D X GRPPRT
00:00000090 X GICINI
00:00000093 X WRTPSG
00:00000096 X RDPSG
00:00000141   SNSMAT
00:000000D5 X GTSTCK
00:000000D8 X GTTRIG
00:00000024 X ENASLT
00:00000156 X KILBUF
00:00001800 X BASE10
00:00002000   BASE11
00:00000000   BASE12
00:00001B00 X BASE13
00:00003800 X BASE14
00:00004010   MAIN
00:00004048   LOOP
00:00004055   ENDTEST
00:00000080   RLEWB_CD
00:000000FF   RLEWB_END
00:00004058   unRLEWBtoRAM
00:00004061   write_CD2RAM
00:00004068   read_COMVAL
00:00004074   RLEWBram_loop
00:0000407B   PICTURE00_PAT


 Output: Test_RLEWB4.out
-------------------------------------------------

 Page: 00
  Org: 00000000  Size: *  Used: 00000000

    No output

 Output: TESTRLEW.ROM
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00004000  Used: 000005D3

   Address   Length Align   Label
   00004000    1491         MAIN
   000045D3   14893       <empty>
